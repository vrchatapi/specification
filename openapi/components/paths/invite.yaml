openapi: 3.0.3
info:
  title: invite
  version: '1.0'
  description: Invite Docs Here
paths:
  '/message/{userId}/{messageType}':
    parameters:
      - $ref: ../parameters.yaml#/userId
      - $ref: ../parameters.yaml#/messageType
    get:
      summary: List Invite Messages
      tags:
        - invite
      x-codeSamples:
        $ref: "../codeSamples/invite.yaml#/~1message~1{userId}~1{messageType}/get"
      responses:
        '200':
          $ref: ../responses/invite/InviteMessageListResponse.yaml
        '400':
          $ref: ../responses/invite/InviteMessageInvalidSlotNumberError.yaml
        '401':
          $ref: ../responses/NotAuthorizedActionError.yaml
      operationId: getInviteMessages
      security:
        - authCookie: []
      description: |-
        Returns a list of all the users Invite Messages. Admin Credentials are required to view messages of other users!

        Message type refers to a different collection of messages, used during different types of responses.

        * `message` = Message during a normal invite
        * `response` = Message when replying to a message
        * `request` = Message when requesting an invite
        * `requestResponse` = Message when replying to a request for invite
  '/message/{userId}/{messageType}/{slot}':
    parameters:
      - $ref: ../parameters.yaml#/userId
      - $ref: ../parameters.yaml#/messageType
      - $ref: ../parameters.yaml#/slot
    get:
      summary: Get Invite Message
      tags:
        - invite
      x-codeSamples:
        $ref: "../codeSamples/invite.yaml#/~1message~1{userId}~1{messageType}~1{slot}/get"
      responses:
        '200':
          $ref: ../responses/invite/InviteMessageResponse.yaml
        '400':
          $ref: ../responses/invite/InviteMessageGetNegativeSlotError.yaml
        '401':
          $ref: ../responses/NotAuthorizedActionError.yaml
        '404':
          $ref: ../responses/invite/InviteMessageGetTooHighSlotError.yaml
      operationId: getInviteMessage
      security:
        - authCookie: []
      description: |-
        Returns a single Invite Message. This returns the exact same information but less than `getInviteMessages`. Admin Credentials are required to view messages of other users!

        Message type refers to a different collection of messages, used during different types of responses.

        * `message` = Message during a normal invite
        * `response` = Message when replying to a message
        * `request` = Message when requesting an invite
        * `requestResponse` = Message when replying to a request for invite
    put:
      summary: Update Invite Message
      operationId: updateInviteMessage
      security:
        - authCookie: []
      description: |-
        Updates a single Invite Message and then returns a list of all of them. Admin Credentials are required to update messages of other users!

        Updating a message automatically sets the cooldown timer to 60 minutes.
        Trying to edit a message before the cooldown timer expires results in a 429 "Too Fast Error".

        Message type refers to a different collection of messages, used during different types of responses.

        * `message` = Message during a normal invite
        * `response` = Message when replying to a message
        * `request` = Message when requesting an invite
        * `requestResponse` = Message when replying to a request for invite
      x-codeSamples:
        $ref: "../codeSamples/invite.yaml#/~1message~1{userId}~1{messageType}~1{slot}/put"
      responses:
        '200':
          $ref: ../responses/invite/InviteMessageListResponse.yaml
        '400':
          $ref: ../responses/invite/InviteMessageInvalidSlotNumberError.yaml
        '401':
          $ref: ../responses/NotAuthorizedActionError.yaml
        '429':
          $ref: ../responses/invite/InviteMessageUpdateRateLimitError.yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../requests/UpdateInviteMessageRequest.yaml
        description: Message of what to set the invite message to.
      tags:
        - invite
    delete:
      summary: Reset Invite Message
      operationId: resetInviteMessage
      security:
        - authCookie: []
      x-codeSamples:
        $ref: "../codeSamples/invite.yaml#/~1message~1{userId}~1{messageType}~1{slot}/delete"
      responses:
        '200':
          $ref: ../responses/invite/InviteMessageListResponse.yaml
        '400':
          $ref: ../responses/invite/InviteMessageInvalidSlotNumberError.yaml
        '401':
          $ref: ../responses/NotAuthorizedActionError.yaml
        '404':
          $ref: ../responses/invite/InviteMessageNoEntryForSlotError.yaml
        '429':
          $ref: ../responses/invite/InviteMessageUpdateRateLimitError.yaml
      tags:
        - invite
      description: |-
        Resets a single Invite Message back to its original message, and then returns a list of all of them. Admin Credentials are required to update messages of other users!

        Resetting a message respects the rate-limit, so it is not possible to reset within the 60 minutes countdown.
        Resetting it does however not set the rate-limit to 60 like when editing it.
        It is possible to edit it right after resetting it.
        Trying to edit a message before the cooldown timer expires results in a 429 "Too Fast Error".

        Message type refers to a different collection of messages, used during different types of responses.

        * `message` = Message during a normal invite
        * `response` = Message when replying to a message
        * `request` = Message when requesting an invite
        * `requestResponse` = Message when replying to a request for invite

        The DELETE endpoint does not have/require any request body.
  '/invite/{userId}':
    parameters:
      - $ref: ../parameters.yaml#/userId
    post:
      summary: Invite User
      tags:
        - invite
      x-codeSamples:
        $ref: "../codeSamples/invite.yaml#/~1invite~1{userId}/post"
      responses:
        '200':
          $ref: ../responses/notifications/SendNotificationResponse.yaml
        '403':
          $ref: ../responses/invite/InviteMustBeFriendsError.yaml
      operationId: inviteUser
      security:
        - authCookie: []
      description: Sends an invite to a user. Returns the Notification of type `invite` that was sent.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../requests/InviteRequest.yaml
        description: Slot number of the Invite Message to use when inviting a user.
  '/invite/{userId}/photo':
    parameters:
      - $ref: ../parameters.yaml#/userId
    post:
      summary: Invite User with photo
      tags:
        - invite
      x-codeSamples:
        $ref: "../codeSamples/invite.yaml#/~1invite~1{userId}~1photo/post"
      responses:
        '200':
          $ref: ../responses/notifications/SendNotificationResponse.yaml
        '403':
          $ref: ../responses/invite/InviteMustBeFriendsError.yaml
      operationId: inviteUserWithPhoto
      security:
        - authCookie: []
      description: Sends an photo invite to a user. Returns the Notification of type `invite` that was sent.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: The binary blob of the png file.
                data:
                  $ref: ../requests/InviteRequest.yaml
              required:
                - image
                - data
  '/invite/myself/to/{worldId}:{instanceId}':
    parameters:
      - $ref: ../parameters.yaml#/worldId
      - $ref: ../parameters.yaml#/instanceId
    post:
      summary: Invite Myself To Instance
      tags:
        - invite
      operationId: inviteMyselfTo
      security:
        - authCookie: []
      description: Sends self an invite to an instance
      x-codeSamples:
        $ref: "../codeSamples/invite.yaml#/~1invite~1myself~1to~1{worldid}:{instanceid}/post"
      responses:
        '200':
          $ref: ../responses/notifications/SendNotificationResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
        '404':
          $ref: ../responses/instances/InstanceNotFoundError.yaml
  '/invite/{notificationId}/response':
    parameters:
      - $ref: ../parameters.yaml#/notificationId
    post:
      summary: Respond Invite
      tags:
        - invite
      x-codeSamples:
        $ref: "../codeSamples/invite.yaml#/~1invite~1{notificationId}~1response/post"
      responses:
        '200':
          $ref: ../responses/notifications/NotificationResponse.yaml
        '400':
          $ref: ../responses/invite/InviteResponse400Error.yaml
      operationId: respondInvite
      security:
        - authCookie: []
      description: 'Respond to an invite request by sending a world invite to the requesting user. `:notificationId` is the ID of the requesting notification.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../requests/InviteResponse.yaml
        description: Slot number of the Response Message to use when responding to a user.
  '/invite/{notificationId}/response/photo':
    parameters:
      - $ref: ../parameters.yaml#/notificationId
    post:
      summary: Respond Invite with photo
      tags:
        - invite
      x-codeSamples:
        $ref: "../codeSamples/invite.yaml#/~1invite~1{notificationId}~1response~1photo/post"
      responses:
        '200':
          $ref: ../responses/notifications/NotificationResponse.yaml
        '400':
          $ref: ../responses/invite/InviteResponse400Error.yaml
      operationId: respondInviteWithPhoto
      security:
        - authCookie: []
      description: 'Respond with photo to an invite request by sending a world invite to the requesting user. `:notificationId` is the ID of the requesting notification.'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: The binary blob of the png file.
                data:
                  $ref: ../requests/InviteResponse.yaml
              required:
                - image
                - data
  '/requestInvite/{userId}':
    parameters:
      - $ref: ../parameters.yaml#/userId
    post:
      summary: Request Invite
      operationId: requestInvite
      security:
        - authCookie: []
      description: Requests an invite from a user. Returns the Notification of type `requestInvite` that was sent.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../requests/RequestInviteRequest.yaml
        description: Slot number of the Request Message to use when request an invite.
      tags:
        - invite
      x-codeSamples:
        $ref: "../codeSamples/invite.yaml#/~1requestInvite~1{userId}/post"
      responses:
        '200':
          $ref: ../responses/notifications/NotificationResponse.yaml
        '403':
          $ref: ../responses/invite/InviteMustBeFriendsError.yaml
  '/requestInvite/{userId}/photo':
    parameters:
      - $ref: ../parameters.yaml#/userId
    post:
      summary: Request Invite with photo
      operationId: requestInviteWithPhoto
      security:
        - authCookie: []
      description: Requests with photo an invite from a user. Returns the Notification of type `requestInvite` that was sent.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: The binary blob of the png file.
                data:
                  $ref: ../requests/RequestInviteRequest.yaml
              required:
                - image
                - data
      tags:
        - invite
      x-codeSamples:
        $ref: "../codeSamples/invite.yaml#/~1requestInvite~1{userId}~1photo/post"
      responses:
        '200':
          $ref: ../responses/notifications/NotificationResponse.yaml
        '403':
          $ref: ../responses/invite/InviteMustBeFriendsError.yaml
tags:
  $ref: ../tags.yaml
components:
  securitySchemes:
    $ref: ../securitySchemes.yaml
