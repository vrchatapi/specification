openapi: 3.0.3
info:
  title: authentication
  version: '1.0'
  description: Authentication Docs Here
paths:
  /auth:
    get:
      summary: Verify Auth Token
      tags:
        - authentication
      x-codeSamples:
        $ref: "../codeSamples/authentication.yaml#/~1auth/get"
      responses:
        '200':
          $ref: ../responses/authentication/VerifyAuthTokenResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      operationId: verifyAuthToken
      parameters: []
      description: Verify whether the currently provided Auth Token is valid.
      security:
        - authCookie: []
  /logout:
    put:
      summary: Logout
      operationId: logout
      x-codeSamples:
        $ref: "../codeSamples/authentication.yaml#/~1logout/put"
      responses:
        '200':
          $ref: ../responses/authentication/LogoutSuccess.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      description: Invalidates the login session.
      security:
        - authCookie: []
      tags:
        - authentication
  /auth/user:
    get:
      summary: Login and/or Get Current User Info
      tags:
        - authentication
      x-codeSamples:
        $ref: "../codeSamples/authentication.yaml#/~1auth~1user/get"
      responses:
        '200':
          $ref: ../responses/authentication/CurrentUserLoginResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      operationId: getCurrentUser
      description: |-
        This endpoint does the following two operations:
          1) Checks if you are already logged in by looking for a valid `auth` cookie. If you are have a valid auth cookie then no additional auth-related actions are taken. If you are **not** logged in then it will log you in with the `Authorization` header and set the `auth` cookie. The `auth` cookie will only be sent once.
          2) If logged in, this function will also return the CurrentUser object containing detailed information about the currently logged in user.

        The auth string after `Authorization: Basic {string}` is a base64-encoded string of the username and password, both individually url-encoded, and then joined with a colon.
          
        > base64(urlencode(username):urlencode(password))

        **WARNING: Session Limit:** Each authentication with login credentials counts as a separate session, out of which you have a limited amount. Make sure to save and reuse the `auth` cookie if you are often restarting the program. The provided API libraries automatically save cookies during runtime, but does not persist during restart. While it can be fine to use username/password during development, expect in production to very fast run into the rate-limit and be temporarily blocked from making new sessions until older ones expire. The exact number of simultaneous sessions is unknown/undisclosed.
      parameters: []
      security:
        - authHeader: []
        - authHeader: []
          twoFactorAuthCookie: []
        - authCookie: []
  /auth/exists:
    get:
      summary: Check User Exists
      tags:
        - authentication
      x-codeSamples:
        $ref: "../codeSamples/authentication.yaml#/~1auth~1exists/get"
      responses:
        '200':
          $ref: ../responses/authentication/UserExistsResponse.yaml
        '400':
          $ref: ../responses/authentication/MissingParameterError.yaml
      operationId: checkUserExists
      parameters:
        - $ref: ../parameters.yaml#/email
        - $ref: ../parameters.yaml#/displayName
        - $ref: ../parameters.yaml#/usernameQuery
        - $ref: ../parameters.yaml#/excludeUserId
      description: |-
        Checks if a user by a given `username`, `displayName` or `email` exist. This is used during registration to check if a username has already been taken, during change of displayName to check if a displayName is available, and during change of email to check if the email is already used. In the later two cases the `excludeUserId` is used to exclude oneself, otherwise the result would always be true.

        It is **REQUIRED** to include **AT LEAST** `username`, `displayName` **or** `email` query parameter. Although they can be combined - in addition with `excludeUserId` (generally to exclude yourself) - to further fine-tune the search.
  /auth/twofactorauth/totp/verify:
    post:
      summary: Verify 2FA code
      operationId: verify2FA
      x-codeSamples:
        $ref: "../codeSamples/authentication.yaml#/~1auth~1twofactorauth~1totp~1verify/post"
      responses:
        '200':
          $ref: ../responses/authentication/Verify2FAResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../requests/TwoFactorAuthCode.yaml
            examples: {}
      description: Finishes the login sequence with a normal 2FA-generated code for accounts with 2FA-protection enabled.
      tags:
        - authentication
      security:
        - authCookie: []
      parameters: []
  /auth/user/twofactorauth/otp:
    get:
      summary: Get 2FA Recovery codes
      operationId: getRecoveryCodes
      x-codeSamples:
        $ref: "../codeSamples/authentication.yaml#/~1auth~1user~1twofactorauth~1otp/get"
      responses:
        '200':
          $ref: ../responses/authentication/Get2FARecoveryCodesResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      description: Gets the OTP (One Time Password) recovery codes for accounts with 2FA-protection enabled.
      tags:
        - authentication
      security:
        - authCookie: []
  /auth/twofactorauth/otp/verify:
    post:
      summary: Verify 2FA code with Recovery code
      operationId: verifyRecoveryCode
      x-codeSamples:
        $ref: "../codeSamples/authentication.yaml#/~1auth~1twofactorauth~1otp~1verify/post"
      responses:
        '200':
          $ref: ../responses/authentication/Verify2FAResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../requests/TwoFactorAuthCode.yaml
            examples: {}
      description: Finishes the login sequence with an OTP (One Time Password) recovery code for accounts with 2FA-protection enabled.
      tags:
        - authentication
      security:
        - authCookie: []
  /auth/twofactorauth/emailotp/verify:
    post:
      summary: Verify 2FA email code
      operationId: verify2FAEmailCode
      x-codeSamples:
        $ref: "../codeSamples/authentication.yaml#/~1auth~1twofactorauth~1emailotp~1verify/post"
      responses:
        '200':
          $ref: ../responses/authentication/Verify2FAEmailCodeResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../requests/TwoFactorEmailCode.yaml
            examples: { }
      description: Finishes the login sequence with an 2FA email code.
      tags:
        - authentication
      security:
        - authCookie: [ ]
      parameters: [ ]
  '/users/{userId}/delete':
    parameters:
      - $ref: ../parameters.yaml#/userId
    put:
      summary: Delete User
      operationId: deleteUser
      x-codeSamples:
        $ref: "../codeSamples/authentication.yaml#/~1user~1{userId}~1delete/put"
      responses:
        '200':
          $ref: ../responses/authentication/DeleteUserResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      tags:
        - authentication
      description: |-
        Deletes the account with given ID. Normal users only have permission to delete their own account. Account deletion is 14 days from this request, and will be cancelled if you do an authenticated request with the account afterwards.

        **VRC+ NOTE:** Despite the 14-days cooldown, any VRC+ subscription will be cancelled **immediately**.

        **METHOD NOTE:** Despite this being a Delete action, the method type required is PUT.
      security:
        - authCookie: []
tags:
  $ref: ../tags.yaml
components:
  securitySchemes:
    $ref: ../securitySchemes.yaml
